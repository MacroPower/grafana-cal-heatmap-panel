{"version":3,"sources":["../src/cal_heatmap_ctrl.js"],"names":["TimeSeries","MetricsPanelCtrl","moment","CalHeatMapCtrl","$scope","$element","$injector","panelDefaults","datasource","config","animationDuration","domain","subDomain","verticalOrientation","colLimit","rowLimit","cellSize","cellPadding","cellRadius","domainGutter","label","position","rotate","width","legendStr","legendColors","min","max","empty","base","displayLegend","_","defaults","panel","angular","copy","seriesList","element","events","on","onRender","bind","onDataReceived","onDataError","onDataSnapshotLoad","onInitEditMode","seriesData","index","datapoints","alias","target","series","color","unit","length","last","utc","datapointsCount","addEditorTab","snapshotData","data","err","render","dataList","map","seriesHandler","subDomains","cand","indexOf","elem","find","_this","update","points","i","from","range","to","days","diff","cal","CalHeatMap","itemSelector","legend","split","parseFloat","x","start","toDate","domainLabelFormat","Math","init","destroy","e","console","log","innerHTML","templateUrl"],"mappings":"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","file":"cal_heatmap_ctrl.js","sourcesContent":["import TimeSeries from 'app/core/time_series2';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport './bower_components/d3/d3.js';\nimport './bower_components/cal-heatmap/cal-heatmap.js';\n\nexport class CalHeatMapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $element, $injector) {\n    super($scope, $injector);\n\n    var panelDefaults = {\n      datasource: null,\n      config: {\n\tanimationDuration: 0,\n        domain: 'auto',\n        subDomain: 'auto',\n        verticalOrientation: false,\n        colLimit: null,\n        rowLimit: null,\n        cellSize: 10,\n        cellPadding: 2,\n        cellRadius: 0,\n        domainGutter: 2,\n        label: {\n          position: 'bottom',\n          rotate: 'null',\n          width: 60,\n        },\n        legendStr: '10,20,30,40',\n        legendColors: {\n          min: \"#666\",\n          max: \"steelblue\",\n          empty: \"#222\",\n          base: \"transparent\",\n        },\n        displayLegend: true,\n      },\n    };\n\n    _.defaults(this.panel, angular.copy(panelDefaults));\n    this.seriesList = [];\n\n    this.element = $element;\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  seriesHandler(seriesData, index) {\n    var datapoints = seriesData.datapoints;\n    var alias = seriesData.target;\n\n    var series = new TimeSeries({\n      datapoints: datapoints,\n      alias: alias,\n      color: index,\n      unit: false,\n    });\n\n    if (datapoints && datapoints.length > 0) {\n      var last = moment.utc(datapoints[datapoints.length - 1][1]);\n\n      this.datapointsCount += datapoints.length;\n    }\n\n    return series;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options',\n                      'public/plugins/neocat-cal-heatmap-panel/editor.html',\n                      2);\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData.data);\n  }\n\n  onDataError(err) {\n    this.seriesList = [];\n    this.render([]);\n  }\n\n  onDataReceived(dataList) {\n    this.seriesList = dataList.map(this.seriesHandler.bind(this));\n    this.render(this.seriesList);\n  }\n\n  onRender() {\n    if (!this.seriesList || !this.seriesList[0])\n      this.seriesList = [{\"datapoints\":[]}];\n\n    var subDomains = {\n      'auto':  ['auto'],\n      'month': ['auto', 'week', 'x_week', 'day', 'x_day'],\n      'day':   ['auto', 'hour', 'x_hour'],\n      'hour':  ['auto', 'min', 'x_min']\n    };\n    var cand = subDomains[this.panel.config.domain];\n    if (!cand || cand.indexOf(this.panel.config.subDomain) < 0)\n      this.panel.config.subDomain = 'auto';\n\n    var elem = this.element.find(\".cal-heatmap-panel\")[0];\n    var _this = this;\n    var update = function() {\n      var data = {};\n      var points = _this.seriesList[0].datapoints;\n      for (var i = 0; i < points.length; i++) {\n        data[points[i][1] / 1000] = points[i][0];\n      }\n\n      var from = moment.utc(_this.range.from);\n      var to = moment.utc(_this.range.to);\n      var days = to.diff(from, \"days\") + 1;\n      var cal = _this.cal = new CalHeatMap();\n\n      var config = angular.copy(_this.panel.config)\n      config.itemSelector = elem;\n      config.data = data;\n      config.legend = config.legendStr ?\n        config.legendStr.split(/\\s*,\\s*/).map(x => parseFloat(x)) : null\n      config.label.position = config.verticalOrientation ? 'left' : 'bottom';\n\n      if (config.domain == 'auto') {\n        config.domain = days > 31 ? \"month\" : days > 3 ? \"day\" : \"hour\";\n      }\n      if (config.subDomain == 'auto') {\n        delete config.subDomain;\n      }\n      config.start = moment.utc(_this.range.from).toDate();\n      if (config.domain == 'month') {\n        config.range = to.diff(from, \"months\") + 1;\n        config.domainLabelFormat = '%y/%m';\n      }\n      else if (config.domain == 'day') {\n        config.range = days;\n        config.domainLabelFormat = '%m/%d';\n      }\n      else if (config.domain == 'hour') {\n        config.range = to.diff(from, \"hours\") + 1;;\n        config.domainLabelFormat = '%d %H:%M';\n      }\n      config.range = Math.min(config.range, 60); // avoid browser hang\n\n      _this.cal.init(config);\n    };\n\n    if (this.cal) {\n      try {\n        this.cal.destroy(update);\n      } catch (e) {\n        console.log(\"Destroy failed: \" + e);\n        elem.innerHTML = '';\n        update();\n      }\n    } else {\n      update();\n    }\n  }\n\n}\n\nCalHeatMapCtrl.templateUrl = 'module.html';\n"]}